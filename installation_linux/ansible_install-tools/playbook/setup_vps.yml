---
- name: Configuration du serveur VPS
  hosts: all
  become: true
  vars:
    ssh_port: 49166
    allowed_ssh_ips:
      - 77.201.168.90
      - 82.64.31.31
    sshd_config_settings:
      Port: "{{ ssh_port }}"
      SyslogFacility: AUTH
      LogLevel: INFO
      PermitRootLogin: "no"
      PubkeyAuthentication: "yes"
      PasswordAuthentication: "no"
    ufw_allowed_ports:
      - { port: 80, proto: 'tcp', from: 'any' }
      - { port: 443, proto: 'tcp', from: 'any' }
      - { port: 6881, proto: 'tcp', from: 'any' }
      - { port: 6881, proto: 'udp', from: 'any' }
    timezone: "Europe/Paris"
    locales:
      - "en_US.UTF-8"
      - "fr_FR.UTF-8"

  tasks:

  - name: Définir le fuseau horaire sur {{ timezone }}
    timezone:
      name: "{{ timezone }}"

  - name: Générer les locales nécessaires
    shell: |
      sed -i 's/^# \({{ item }}\)/\1/' /etc/locale.gen
      locale-gen
    args:
      warn: false
    loop: "{{ locales }}"

  - name: Définir la locale par défaut
    lineinfile:
      dest: /etc/default/locale
      regexp: '^LANG='
      line: 'LANG="{{ locales[0] }}"'
      state: present

  - name: Assurer les paramètres de sshd_config
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^{{ item.key }}'
      line: '{{ item.key }} {{ item.value }}'
      state: present
    loop: "{{ sshd_config_settings | dict2items }}"
    notify:
      - Redémarrer ssh

  - name: UFW - Définir les politiques par défaut (entrantes)
    ufw:
      direction: incoming
      policy: deny

  - name: UFW - Définir les politiques par défaut (sortantes)
    ufw:
      direction: outgoing
      policy: allow

  - name: UFW - Autoriser SSH depuis des IP spécifiques
    ufw:
      rule: allow
      proto: tcp
      from_ip: "{{ item }}"
      port: "{{ ssh_port }}"
    loop: "{{ allowed_ssh_ips }}"

  - name: UFW - Autoriser les ports entrants
    ufw:
      rule: allow
      proto: "{{ item.proto }}"
      port: "{{ item.port }}"
      from_ip: "{{ item.from }}"
    loop: "{{ ufw_allowed_ports }}"

  - name: Installer Fail2ban
    apt:
      name: fail2ban
      state: present
      update_cache: yes

  - name: Déployer le filtre personnalisé pour sshd
    copy:
      dest: /etc/fail2ban/filter.d/sshd.conf
      content: |
        [INCLUDES]
        before = common.conf

        [Definition]
        failregex = ^%(__prefix_line)sFailed \S+ for .* from <HOST>( via \S+)? port \d+ ssh2?$
                    ^%(__prefix_line)sReceived disconnect from <HOST>: 11: \S+: \S+ \[preauth\]$
                    ^%(__prefix_line)sConnection closed by <HOST> \[preauth\]$
                    ^%(__prefix_line)sInvalid user .* from <HOST>$
                    ^%(__prefix_line)sUser .+ from <HOST> not allowed because not listed in AllowUsers$
                    ^%(__prefix_line)sUser .+ from <HOST> not allowed because listed in DenyUsers$
                    ^%(__prefix_line)sConnection closed by authenticating user .* <HOST> port \d+ \[preauth\]$
        ignoreregex =
    notify:
      - Redémarrer fail2ban

  - name: Déployer la configuration jail.local pour Fail2ban
    copy:
      dest: /etc/fail2ban/jail.local
      content: |
        [DEFAULT]
        bantime = 1h
        findtime = 10m
        maxretry = 5
        action = %(action_)s

        [sshd]
        enabled = true
        port    = {{ ssh_port }}
        filter  = sshd
        logpath = /var/log/auth.log
    notify:
      - Redémarrer fail2ban

  - name: Installer les dépendances pour Docker
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common
      state: present

  - name: Ajouter la clé GPG de Docker
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Ajouter le référentiel Docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
      state: present

  - name: Mettre à jour le cache APT
    apt:
      update_cache: yes

  - name: Installer Docker
    apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: latest

  - name: Installer Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: '0755'

  handlers:
    - name: Redémarrer ssh
      service:
        name: ssh
        state: restarted

    - name: Redémarrer fail2ban
      service:
        name: fail2ban
        state: restarted
