---
- name: Configuration du serveur VPS
  hosts: debian_v1
  become: true
  vars:
    ssh_port: 49166
    allowed_ssh_ips:
      - 77.201.168.90
      - 82.64.31.31
    ufw_allowed_ports:
      - { port: 80, proto: 'tcp', from: 'any' }
      - { port: 443, proto: 'tcp', from: 'any' }
      - { port: 6881, proto: 'tcp', from: 'any' }
      - { port: 6881, proto: 'udp', from: 'any' }
    timezone: "Europe/Paris"
    locales:
      - "en_US.UTF-8"
      - "fr_FR.UTF-8"

  tasks:

    # -------------------
    # Configuration Système
    # -------------------

    - name: Définir le fuseau horaire sur {{ timezone }}
      timezone:
        name: "{{ timezone }}"

    - name: Générer les locales nécessaires
      locale_gen:
        name: "{{ item }}"
        state: present
      loop: "{{ locales }}"

    - name: Définir la locale par défaut
      lineinfile:
        dest: /etc/default/locale
        regexp: '^LANG='
        line: 'LANG="{{ locales[0] }}"'
        state: present

    - name: Assurer les paramètres de sshd_config
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
        state: present
      loop: "{{ sshd_config_settings | default({}) | dict2items }}"
      notify:
        - Redémarrer ssh

    # -------------------
    # Configuration UFW
    # -------------------

    - name: Installer UFW
      apt:
        name: ufw
        state: present
        update_cache: yes

    - name: UFW - Définir les politiques par défaut (entrantes)
      ufw:
        direction: incoming
        policy: deny

    - name: UFW - Définir les politiques par défaut (sortantes)
      ufw:
        direction: outgoing
        policy: allow

    - name: UFW - Autoriser SSH depuis des IP spécifiques
      ufw:
        rule: allow
        proto: tcp
        from_ip: "{{ item }}"
        port: "{{ ssh_port }}"
      loop: "{{ allowed_ssh_ips }}"

    - name: UFW - Autoriser les ports entrants
      ufw:
        rule: allow
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
        from_ip: "{{ item.from }}"
      loop: "{{ ufw_allowed_ports }}"

    # -------------------
    # Configuration Fail2ban
    # -------------------

    - name: Installer Fail2ban
      apt:
        name: fail2ban
        state: present
        update_cache: yes

    - name: Sauvegarder le fichier sshd.conf de Fail2ban
      copy:
        src: /etc/fail2ban/filter.d/sshd.conf
        dest: /etc/fail2ban/filter.d/sshd.conf.bak
        remote_src: yes
        owner: root
        group: root
        mode: '0644'

    - name: Remplacer le bloc failregex dans sshd.conf pour Fail2ban
      replace:
        path: /etc/fail2ban/filter.d/sshd.conf
        regexp: 'failregex\s*=.*(\n\s+.*)*'
        replace: |
          failregex = ^%(__prefix_line)sFailed \\S+ for .* from <HOST>( via \\S+)? port \\d+ ssh2?$
                      ^%(__prefix_line)sReceived disconnect from <HOST>: 11: \\S+: \\S+ \\[preauth\\]$
                      ^%(__prefix_line)sConnection closed by <HOST> \\[preauth\\]$
                      ^%(__prefix_line)sInvalid user .* from <HOST>$
                      ^%(__prefix_line)sUser .+ from <HOST> not allowed because not listed in AllowUsers$
                      ^%(__prefix_line)sUser .+ from <HOST> not allowed because listed in DenyUsers$
                      ^%(__prefix_line)sConnection closed by authenticating user .* <HOST> port \\d+ \\[preauth\\]$
      notify:
        - Redémarrer fail2ban

    - name: Déployer la configuration jail.local pour Fail2ban
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 1h
          findtime = 10m
          maxretry = 5
          action = %(action_)s

          [sshd]
          enabled = true
          port    = {{ ssh_port }}
          filter  = sshd
          logpath = /var/log/auth.log
      notify:
        - Redémarrer fail2ban



  handlers:
    - name: Redémarrer ssh
      service:
        name: ssh
        state: restarted

    - name: Redémarrer fail2ban
      service:
        name: fail2ban
        state: restarted
